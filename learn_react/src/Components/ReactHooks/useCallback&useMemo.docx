1. useCallback
Là một react hooks giúp mình tạo ra một memoized callback và chỉ tạo ra callback mới khi
dependencies thay đổi.
- Nhận vào 2 tham số: 1 là function, 2 là dependencies.
- Return memoized callback
- Chỉ tạo ra function mới khi dependencies thay đổi.
- Nếu dùng empty dependencies thì không bao giờ tạo ra function mới.

// Mỗi lần App re-render
// --> tạo ra một function mới
// --> Chart bị re-render
function App() {
 const handleChartTypeChange = (type) => {}
 return <Chart onTypeChange={handleChartTypeChange} />;
}

// Mỗi lần App re-render
// --> nhờ có useCallback() nó chỉ tạo function một lần đầu
// --> Nên Chart ko bị re-render.
function App() {
 const handleChartTypeChange = useCallback((type) => {}, [])
 return <Chart onTypeChange={handleChartTypeChange} />;
}

2. useMemo
Là một react hooks giúp mình tạo ra một memoized value và chỉ tính toán ra value mới khi
dependencies thay đổi
- Nhận vào 2 tham số: 1 là function, 2 là dependencies.
- Return memoized value
- Chỉ tính toán value mới khi dependencies thay đổi.
- Nếu dùng empty dependencies thì không bao giờ tính toán lại value mới.

// Mỗi lần App re-render
// --> tạo ra một mảng mới
// --> Chart bị re-render do props thay đổi
function App() {
 const data = [{}, {}, {}];
 return <Chart data={data} />;
}

// Mỗi lần App re-render
// --> nhờ có useMemo() nó chỉ tạo ra cái mảng 1 lần đầu
// --> Nên Chart ko bị re-render.
function App() {
 const data = useMemo(() => [{}, {}, {}], [])
 return <Chart data={data} />;
}

3. so sánh useMemo và useCallback
- GIỐNG NHAU:
  + Đều áp dụng kĩ thuật memoization.
  + Đều nhận vào 2 tham số: function và dependencies.
  + Đều là react hooks, dùng cho functional component.
  + Dùng để hạn chế những lần re-render dư thừa (micro improvements).
- KHÁC NHAU:
#             useCallback()                     useMemo()
return        memoized callback                 memoized value
code          useCallback((type) => {}, [])     useMemo(() => [{}, {}, {}], [])

4. Có nên sử dụng useCallback() vs useMemo() hay không?
- Không nên dùng cho tất cả components.
- Nên dùng cho: đồ thị, biểu đồ, animations, những component nặng phần render.
- Chỉ là micro improvements.